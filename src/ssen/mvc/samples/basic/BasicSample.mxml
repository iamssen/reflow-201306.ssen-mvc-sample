<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" xmlns:s="library://ns.adobe.com/flex/spark"
		 xmlns:view="ssen.mvc.samples.basic.view.*" preinitialize="initialContext()"
		 implements="ssen.mvc.core.IContextView">
	<s:layout>
		<s:VerticalLayout paddingTop="5" paddingBottom="5" paddingLeft="5" paddingRight="5" gap="10"
						  horizontalAlign="left" verticalAlign="top"/>
	</s:layout>

	<fx:Script>
		<![CDATA[
			import ssen.mvc.core.IContext;
			
			//=========================================================
			// ContextView 는 modular 를 구현하는 경우
			// module 의 시작점이 되는 interface 입니다.
			// 
			//=========================================================

			private var context:BasicSampleContext;

			public function get contextInitialized():Boolean {
				return context !== null;
			}

			public function initialContext(parentContext:IContext=null):void {
				
				//---------------------------------------
				// 최초 시작점인 context view 인 경우 자체적으로 preinitialize="initialContext()" 와 같이
				// context 생성을 실행시켜줄 필요가 있고, 그 외, 하부 context view 인 경우엔
				// Framework 가 자동으로 실행시켜 줍니다.
				//---------------------------------------
				
				context=new BasicSampleContext(this, parentContext);
			}
		]]>
	</fx:Script>

	<s:Group width="100%" height="100%">
		<s:layout>
			<s:VerticalLayout paddingTop="0" paddingBottom="0" paddingLeft="0" paddingRight="0" gap="5"
							  horizontalAlign="left" verticalAlign="top"/>

		</s:layout>
		
		<!-- Message 기록을 확인하기 위한 View -->
		<view:MessageLog width="100%" height="100%" skinClass="ssen.mvc.samples.basic.view.MessageLogSkin"/>
		
		<!-- Message 입력을 위한 View -->
		<view:MessageInput width="100%" height="25" skinClass="ssen.mvc.samples.basic.view.MessageInputSkin"/>
	</s:Group>

	<!-- 디버깅 시에 Trace log 를 확인하기 위한 View --> 
	<view:Dummy width="100%" height="100" skinClass="ssen.mvc.samples.basic.view.DummySkin"/>
</s:Group>
